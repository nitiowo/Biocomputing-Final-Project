recursive = FALSE)
add_col <- function(one_file) {
mpa <- read.csv(one_file, header=T)
write.table(mpa,
file = sub("\\.csv", "_new\\.csv", one_file),
append = FALSE,
quote = FALSE,
row.names = FALSE,
col.names = TRUE)
return(mpa)
}
W<- lapply(csvfilesX,add_col)
View(W)
View(W[[1]])
W<- lapply(csvfilesX,add_col)
View(W)
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,".csv") #this split it to screen_120
#for loop to combine data (make into a funtion add line to make it into a file )
for(i in csvfilesY){
o<-read.csv(i,header =TRUE, sep = ",") #this only works for the last screen
allDataDF<-rbind(allDataDF, o)
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,".csv") #this split it to screen_120
#how would I split it down to just the day?
#allDataDF[i+1,14]<- day
}
strsplit(csvfilesY,".csv")
W[[1]]
i=csvfilesY
i=csvfilesY[1]
i
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,".csv") #this split it to screen_120
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,"_") #this split it to screen_120
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,"_")[[1]] #this split it to screen_120
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
strsplit(i,"_")[[1]][4]#this split it to screen_120
#days<- printi) #used csvfiles becasue if I used i it only worked for screen_175
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
strsplit(W,".csv")[[1]]
strsplit(W,".csv")[[1]][1]
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o<-read.csv(i,header =TRUE, sep = ".") #this only works for the last screen
o<-read.csv(i,header =TRUE, sep = ".")
head(o)
txt2csv<- function(files){
alltxtfiles<- list.files(pattern = ".txt")
for (i in 1:length(alltxtfiles)) {txtfiles= read.table(file =alltxtfiles[i], header = T, sep="" )
write.table(txtfiles, file = paste0("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/",gsub("\\.txt", "", alltxtfiles[i]), ".csv"),na ="",row.names = FALSE,sep=',', quote=FALSE)
}}
#how to use txt2csv function
# to convert all txt files to csv use txt2csv(alltxtfiles) always use alltxtfiles
# since it is the variable within the function that contains all the txt files
txt2csv(alltxtfiles)
?read.table
txt2csv<- function(files){
alltxtfiles<- list.files(pattern = ".txt")
for (i in 1:length(alltxtfiles)) {txtfiles= read.table(file =alltxtfiles[i], header = T)
write.table(txtfiles, file = paste0("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/",gsub("\\.txt", "", alltxtfiles[i]), ".csv"),na ="",row.names = FALSE,sep=',', quote=FALSE)
}}
#how to use txt2csv function
# to convert all txt files to csv use txt2csv(alltxtfiles) always use alltxtfiles
# since it is the variable within the function that contains all the txt files
txt2csv(alltxtfiles)
txt2csv<- function(files){
alltxtfiles<- list.files(pattern = ".txt")
for (i in 1:length(alltxtfiles)) {txtfiles= read.table(file =alltxtfiles[i], header = T)
write.table(txtfiles, file = paste0("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/",gsub("\\.txt", "", alltxtfiles[i]), ".csv"),na ="",row.names = FALSE,sep=',', quote=FALSE)
}}
txt2csv(alltxtfiles)
setwd("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/")
txt2csv<- function(files){
alltxtfiles<- list.files(pattern = ".txt")
for (i in 1:length(alltxtfiles)) {txtfiles= read.table(file =alltxtfiles[i], header = T)
write.table(txtfiles, file = paste0("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/",gsub("\\.txt", "", alltxtfiles[i]), ".csv"),na ="",row.names = FALSE,sep=',', quote=FALSE)
}}
txt2csv(alltxtfiles)
csvfilesY<- list.files(path = "~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/",
pattern = ".csv",
full.names = TRUE,
recursive = FALSE)
o<-read.csv(i,header =TRUE, sep = "\t")
o<-read.csv(i,header =TRUE) #this only works for the last screen
head(o)
CompileFiles<- function(CountryName, NameFile, VectorFileNames){
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
#how would I split it down to just the day?
#allDataDF[i+1,14]<- day
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY )
x=matrix(0, 3, 2)
x
x[1,1]
x[1,1]= NA
x
is.na(x)
?rowSums
rowSums(is.na(x))
RowsDF<-rowSums(is.na(x))
RowsDF==0
x[RowsDF==0,]
CompileFiles<- function(CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store comipled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
na
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
isthereNA==0
allDataDF[isthereNA==0]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY)
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles<- function(CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store comipled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
na
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles<- function(CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store comipled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
na
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles<- function(CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
#example of usage
CompileFiles(CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles<- function(Path, CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
#example of usage
CompileFiles("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/", CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles<- function(Path, CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
#example of usage
CompileFiles("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryY/", CountryName = "Y", NameFile = "YCountryData.csv",VectorFileNames = csvfilesY, na="remove")
CompileFiles("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/countryX//", CountryName = "X", NameFile = "XCountryData.csv",VectorFileNames = csvfilesY)
convert_txt_to_csv_file = function(txt_filename, csv_filename, sep = " ") {
data = read.table(txt_filename, sep = sep, header = TRUE)
write.csv(data, csv_filename, row.names = FALSE)
}
convert_txt_to_csv_file = function(txt_filename, csv_filename, sep = " ") {
data = read.table(txt_filename, sep = sep, header = TRUE)
write.csv(data, csv_filename, row.names = FALSE)
}
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
CompileFiles<- function(Path, CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
data_analyze = function(filename) {
data = read.csv(filename) #read in information
#initialize a data frame to store all summarized information
summarized_all_df = data.frame(
day_of_year = numeric(), # day
country = character(), # country
screens = numeric(),# number of screens
infected = numeric(), # number of infected patients
infected_male = numeric(), # number of infected male patients
infected_female = numeric(), # number of infected female patients
infected_male_portion = numeric(), # percentage of infected male
infected_age_group1 = numeric(), # number of patients younger than 20
infected_age_group2 = numeric(), # number of patients between 20 to 40
infected_age_group3 = numeric(), # number of patients between 40 to 60
infected_age_group4 = numeric(), # number of patients between 60 to 80
infected_age_group5 = numeric(), # number of patients older than 80
stringsAsFactors = FALSE
)
# 4. custom function to summarize the all data
data_analyze = function(filename) {
data = read.csv(filename) #read in information
#initialize a data frame to store all summarized information
summarized_all_df = data.frame(
day_of_year = numeric(), # day
country = character(), # country
screens = numeric(),# number of screens
infected = numeric(), # number of infected patients
infected_male = numeric(), # number of infected male patients
infected_female = numeric(), # number of infected female patients
infected_male_portion = numeric(), # percentage of infected male
infected_age_group1 = numeric(), # number of patients younger than 20
infected_age_group2 = numeric(), # number of patients between 20 to 40
infected_age_group3 = numeric(), # number of patients between 40 to 60
infected_age_group4 = numeric(), # number of patients between 60 to 80
infected_age_group5 = numeric(), # number of patients older than 80
stringsAsFactors = FALSE
)
days = unique(data$dayofYear) # get how many different days are there in the all data file
countries = unique(data$country) # get how many countries are recorded in all data file
for (day_id in days) {
df_day = data[data$dayofYear == day_id, ] #get subset data frame by different day
for (country_id in countries) {
df = df_day[df_day$country == country_id, ] #get a individual data frame for one country on single day
df_infected = df[rowSums(df[, 3:12], na.rm = TRUE) > 0, ] # analyze the individual data frame to see how many patients are infected
# number of screens for a day
num_screens = nrow(df)
# number of infected for a day
num_infected = nrow(df_infected)
# number of infected by gender
num_male_infected = nrow(df_infected[df_infected$gender == "male", ])
num_female_infected = nrow(df_infected[df_infected$gender == "female", ])
infected_male_portion = 0 # initialize infected_male_portion
if (num_infected != 0) # calculate the infected male percentage when there are infected patients
infected_male_portion = num_male_infected / num_infected
# number of infected by age group
num_infected_age_group1 = nrow(df_infected[df_infected$age >= 0 & df_infected$age < 20, ])
num_infected_age_group2 = nrow(df_infected[df_infected$age >= 20 & df_infected$age < 40 , ])
num_infected_age_group3 = nrow(df_infected[df_infected$age >= 40 & df_infected$age < 60, ])
num_infected_age_group4 = nrow(df_infected[df_infected$age >= 60 & df_infected$age < 80, ])
num_infected_age_group5 = nrow(df_infected[df_infected$age >= 80, ])
# create a new row
new_row = list(day_of_year = day_id, country = country_id,
screens = num_screens, infected = num_infected,
infected_male = num_male_infected, infected_female = num_female_infected,
infected_male_portion = infected_male_portion,
infected_age_group1 = num_infected_age_group1,
infected_age_group2 = num_infected_age_group2,
infected_age_group3 = num_infected_age_group3,
infected_age_group4 = num_infected_age_group4,
infected_age_group5 = num_infected_age_group5)
summarized_all_df[nrow(summarized_all_df) + 1, ] = new_row
}
}
return(summarized_all_df) # get the summarized data frame
}
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
# 2. convert all .txt files under a dir into .csv format (for multiple files)
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
# 3.Compiles Multiple files
CompileFiles<- function(Path, CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
# 2. convert all .txt files under a dir into .csv format (for multiple files)
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
setwd("~/Desktop/Biocomputing2023/Git_Home_Repo/Projects/Biocomputing-Final-Project/")
convert_txt_to_csv_dir = function(dirname) {
dirname = "countryY"
files = list.files(dirname, full.names = TRUE)
for (file in files) {
if (grepl("\\.txt$", file)) {
new_file = sub("\\.txt$", ".csv", file)
convert_txt_to_csv(file, new_file)
}
}
}
CompileFiles<- function(Path, CountryName, NameFile, VectorFileNames, na="Warn"){
#this makes an empty data frame to store compiled data
allDataDF = data.frame(matrix(vector(), 0, 14,
dimnames=list(c(), c("Gender","Age","Marker01", "Marker02", "Marker03", "Marker04", "Marker05", "Marker06", "Marker07", "Marker08", "Marker09", "Marker10", "Country", "DayofYear"))),
stringsAsFactors=F)
#for loop to go through each file and places the info into the
for(i in VectorFileNames){
o<-read.csv(i,header =TRUE) #this only works for the last screen
W<-strsplit(i,"_")[[1]][4]#this split it to screen_120
day<-as.numeric(strsplit(W,".csv")[[1]][1])
o$Country<- CountryName
o$DayofYear<-day
allDataDF<-rbind(allDataDF, o)
}
if (na=="remove") {
isthereNA<-rowSums(is.na(allDataDF))
allDataDF[isthereNA==0,]
}else if(na=="Ignore"){
isthereNA<-rowSums(is.na(allDataDF))
}else if(na=="Warn"){
isthereNA<-rowSums(is.na(allDataDF))
print("There are NA's Present")
}
write.csv(allDataDF, NameFile, row.names = FALSE)
}
